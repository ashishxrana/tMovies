{"ast":null,"code":"var _jsxFileName = \"/Users/harshthakur/Documents/react-movie-main/src/context/userContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { Redirect } from 'react-router';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged, signOut, updateProfile, sendPasswordResetEmail, GoogleAuthProvider, signInWithPopup, GithubAuthProvider } from \"firebase/auth\";\nimport { auth } from \"../Firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({});\nexport const useUserContext = () => {\n  _s();\n\n  return useContext(UserContext);\n};\n\n_s(useUserContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const UserContextProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const setErrorComponents = value => {\n    setError(value);\n  };\n\n  var count = 0;\n  useState(() => {\n    setLoading(true);\n    const unsubscribe = onAuthStateChanged(auth, res => {\n      if (res) {\n        console.log(\"check\");\n        count += 1;\n        console.log(count);\n\n        if (count >= 2) {\n          setUser(res);\n        }\n      } else {\n        setUser(null);\n      }\n\n      setError(\"\");\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n\n  const registerUser = (email, password, name) => {\n    createUserWithEmailAndPassword(auth, email, password).then(() => updateProfile(auth.currentUser, {\n      displayName: name\n    })).then(res => console.log(res)).catch(err => setError(err.message));\n  };\n\n  const signInUser = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password).then(res => console.log(res), setUser(1)).catch(err => setError(err.code)).finally(() => setLoading(false));\n  };\n\n  const logoutUser = () => {\n    console.log(\"check123\");\n    signOut(auth);\n    setUser(null);\n  };\n\n  const signInWithGithub = () => {\n    setError(\"\");\n    signInWithPopup(auth, new GithubAuthProvider()).then(res => console.log(res)).catch(err => setError(err.code)).finally(() => setLoading(false));\n  };\n\n  const forgotPassword = email => {\n    return sendPasswordResetEmail(auth, email);\n  };\n\n  const provider = new GoogleAuthProvider();\n\n  const signInWithGoogle = () => {\n    signInWithPopup(auth, provider).then(result => {\n      const name = result.user.displayName;\n      const email = result.user.email;\n      const profilePic = result.user.photoURL;\n      localStorage.setItem(\"name\", name);\n      localStorage.setItem(\"email\", email);\n      localStorage.setItem(\"profilePic\", profilePic);\n    }).catch(error => {\n      setError(error);\n    });\n  };\n\n  const [index, setIndex] = useState(true);\n  const contextValue = {\n    user,\n    loading,\n    error,\n    setUser,\n    signInUser,\n    registerUser,\n    logoutUser,\n    forgotPassword,\n    index,\n    setIndex,\n    setErrorComponents,\n    signInWithGoogle,\n    signInWithGithub\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(UserContextProvider, \"YFO7vOi0+pttXEf8L+JCmWtbluw=\");\n\n_c = UserContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"sources":["/Users/harshthakur/Documents/react-movie-main/src/context/userContext.js"],"names":["createContext","useContext","useState","Redirect","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","signOut","updateProfile","sendPasswordResetEmail","GoogleAuthProvider","signInWithPopup","GithubAuthProvider","auth","UserContext","useUserContext","UserContextProvider","children","user","setUser","loading","setLoading","error","setError","setErrorComponents","value","count","unsubscribe","res","console","log","registerUser","email","password","name","then","currentUser","displayName","catch","err","message","signInUser","code","finally","logoutUser","signInWithGithub","forgotPassword","provider","signInWithGoogle","result","profilePic","photoURL","localStorage","setItem","index","setIndex","contextValue"],"mappings":"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","sourcesContent":["import {createContext,useContext,useState} from \"react\";\nimport { Redirect } from 'react-router';\nimport{\n    signInWithEmailAndPassword,\n    createUserWithEmailAndPassword,\n    onAuthStateChanged,\n    signOut,\n    updateProfile,\n    sendPasswordResetEmail,\n    GoogleAuthProvider, \n    signInWithPopup,\n    GithubAuthProvider,\n  } from \"firebase/auth\";\nimport {auth} from \"../Firebase\";\nexport const UserContext = createContext({});\n\nexport const useUserContext = () => {\n  return useContext(UserContext);\n};\n\nexport const UserContextProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const setErrorComponents=(value)=>{\n    setError(value)\n  }\n  var count=0;\n  useState(() => {\n    setLoading(true);\n    const unsubscribe = onAuthStateChanged(auth, (res) => {\n      if (res) {\n        console.log(\"check\");\n        count+=1;\n        console.log(count)\n        if(count>=2){\n        setUser(res);\n        }\n      } else {\n        setUser(null);\n      }\n      setError(\"\");\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n\n  const registerUser = (email, password, name) => {\n    createUserWithEmailAndPassword(auth, email, password)\n      .then(() =>\n        updateProfile(auth.currentUser, {\n          displayName: name\n        })\n      )\n      .then((res) => console.log(res))\n      .catch((err) => setError(err.message))\n  };\n\n  const signInUser = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((res) => console.log(res), setUser(1))\n      .catch((err) => setError(err.code))\n      .finally(() => setLoading(false));\n  };\n\n  const logoutUser = () => {\n    console.log(\"check123\")\n    signOut(auth);\n    setUser(null);\n  };\n\n  const signInWithGithub = () => {\n    setError(\"\");\n    signInWithPopup(auth, new GithubAuthProvider())\n      .then((res) => console.log(res))\n      .catch((err) => setError(err.code))\n      .finally(() => setLoading(false));\n  };\n\n  const forgotPassword = (email) => {\n    return sendPasswordResetEmail(auth, email);\n  };\n  const provider = new GoogleAuthProvider();\n  const signInWithGoogle = () => {\n  signInWithPopup(auth, provider)\n    .then((result) => {\n      const name = result.user.displayName;\n      const email = result.user.email;\n      const profilePic = result.user.photoURL;\n\n      localStorage.setItem(\"name\", name);\n      localStorage.setItem(\"email\", email);\n      localStorage.setItem(\"profilePic\", profilePic);\n    })\n    .catch((error) => {\n      setError(error);\n    });\n};\n  const [index, setIndex] = useState(true);\n  const contextValue = {\n    user,\n    loading,\n    error,\n    setUser,\n    signInUser,\n    registerUser,\n    logoutUser,\n    forgotPassword,\n    index, \n    setIndex,\n    setErrorComponents,\n    signInWithGoogle,\n    signInWithGithub,\n  };\n  return (\n    <UserContext.Provider value={contextValue}>{children}</UserContext.Provider>\n  );\n};"]},"metadata":{},"sourceType":"module"}